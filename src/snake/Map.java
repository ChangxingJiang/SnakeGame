package snake;

import java.util.ArrayList;

import tool.Point;

public class Map {

	//【构造器】
	public Map(){}

	//【地图A】
	public ArrayList<Point> getMapA(){
		ArrayList<Point> mapA=new ArrayList<Point>();
		mapA.add(new Point(2,2));
		mapA.add(new Point(2,3));
		mapA.add(new Point(2,4));
		mapA.add(new Point(2,5));
		mapA.add(new Point(2,6));
		mapA.add(new Point(3,2));
		mapA.add(new Point(4,2));
		mapA.add(new Point(5,7));
		mapA.add(new Point(5,8));
		mapA.add(new Point(5,9));
		mapA.add(new Point(5,10));
		mapA.add(new Point(5,11));
		mapA.add(new Point(5,12));
		mapA.add(new Point(5,13));
		mapA.add(new Point(5,14));
		mapA.add(new Point(5,15));
		mapA.add(new Point(6,18));
		mapA.add(new Point(6,19));
		mapA.add(new Point(6,20));
		mapA.add(new Point(6,21));
		mapA.add(new Point(6,22));
		mapA.add(new Point(6,23));
		mapA.add(new Point(6,24));
		mapA.add(new Point(6,25));
		mapA.add(new Point(6,26));
		mapA.add(new Point(6,3));
		mapA.add(new Point(7,3));
		mapA.add(new Point(8,3));
		mapA.add(new Point(9,3));
		mapA.add(new Point(10,3));
		mapA.add(new Point(10,4));
		mapA.add(new Point(10,5));
		mapA.add(new Point(10,6));
		mapA.add(new Point(10,7));
		mapA.add(new Point(10,16));
		mapA.add(new Point(10,17));
		mapA.add(new Point(11,16));
		mapA.add(new Point(11,17));
		mapA.add(new Point(11,26));
		mapA.add(new Point(11,27));
		mapA.add(new Point(11,28));
		mapA.add(new Point(11,29));
		mapA.add(new Point(11,30));
		mapA.add(new Point(12,30));
		mapA.add(new Point(13,30));
		mapA.add(new Point(14,30));
		mapA.add(new Point(15,30));
		mapA.add(new Point(15,7));
		mapA.add(new Point(15,8));
		mapA.add(new Point(15,9));
		mapA.add(new Point(15,10));
		mapA.add(new Point(15,11));
		mapA.add(new Point(15,12));
		mapA.add(new Point(15,13));
		mapA.add(new Point(15,14));
		mapA.add(new Point(15,15));
		mapA.add(new Point(16,18));
		mapA.add(new Point(16,19));
		mapA.add(new Point(16,20));
		mapA.add(new Point(16,21));
		mapA.add(new Point(16,22));
		mapA.add(new Point(16,23));
		mapA.add(new Point(16,24));
		mapA.add(new Point(16,25));
		mapA.add(new Point(16,26));
		mapA.add(new Point(17,31));
		mapA.add(new Point(18,31));
		mapA.add(new Point(19,27));
		mapA.add(new Point(19,28));
		mapA.add(new Point(19,29));
		mapA.add(new Point(19,30));
		mapA.add(new Point(19,31));
		return mapA;
	}
	
	//【地图B】
	public ArrayList<Point> getMapB(){
		ArrayList<Point> mapB=new ArrayList<Point>();
		mapB.add(new Point(2,2));
		mapB.add(new Point(2,3));
		mapB.add(new Point(2,4));
		mapB.add(new Point(2,5));
		mapB.add(new Point(2,6));
		mapB.add(new Point(2,7));
		mapB.add(new Point(2,8));
		mapB.add(new Point(2,9));
		mapB.add(new Point(2,10));
		mapB.add(new Point(2,11));
		mapB.add(new Point(2,12));
		mapB.add(new Point(2,13));
		mapB.add(new Point(2,14));
		mapB.add(new Point(2,15));
		mapB.add(new Point(2,16));
		mapB.add(new Point(2,17));
		mapB.add(new Point(2,18));
		mapB.add(new Point(2,19));
		mapB.add(new Point(2,20));
		mapB.add(new Point(2,21));
		mapB.add(new Point(2,22));
		mapB.add(new Point(2,23));
		mapB.add(new Point(2,24));
		mapB.add(new Point(2,25));
		mapB.add(new Point(2,26));
		mapB.add(new Point(2,2));
		mapB.add(new Point(3,2));
		mapB.add(new Point(4,2));
		mapB.add(new Point(5,2));
		mapB.add(new Point(6,2));
		mapB.add(new Point(7,2));
		mapB.add(new Point(8,2));
		mapB.add(new Point(9,2));
		mapB.add(new Point(10,2));
		mapB.add(new Point(11,2));
		mapB.add(new Point(12,2));
		mapB.add(new Point(13,2));
		mapB.add(new Point(14,2));
		mapB.add(new Point(15,2));
		mapB.add(new Point(16,2));
		mapB.add(new Point(5,31));
		mapB.add(new Point(6,31));
		mapB.add(new Point(7,31));
		mapB.add(new Point(8,31));
		mapB.add(new Point(9,31));
		mapB.add(new Point(10,31));
		mapB.add(new Point(11,31));
		mapB.add(new Point(12,31));
		mapB.add(new Point(13,31));
		mapB.add(new Point(14,31));
		mapB.add(new Point(15,31));
		mapB.add(new Point(16,31));
		mapB.add(new Point(17,31));
		mapB.add(new Point(18,31));
		mapB.add(new Point(19,7));
		mapB.add(new Point(19,8));
		mapB.add(new Point(19,9));
		mapB.add(new Point(19,10));
		mapB.add(new Point(19,11));
		mapB.add(new Point(19,12));
		mapB.add(new Point(19,13));
		mapB.add(new Point(19,14));
		mapB.add(new Point(19,15));
		mapB.add(new Point(19,16));
		mapB.add(new Point(19,17));
		mapB.add(new Point(19,18));
		mapB.add(new Point(19,19));
		mapB.add(new Point(19,20));
		mapB.add(new Point(19,21));
		mapB.add(new Point(19,22));
		mapB.add(new Point(19,23));
		mapB.add(new Point(19,24));
		mapB.add(new Point(19,25));
		mapB.add(new Point(19,26));
		mapB.add(new Point(19,27));
		mapB.add(new Point(19,28));
		mapB.add(new Point(19,29));
		mapB.add(new Point(19,30));
		mapB.add(new Point(19,31));
		mapB.add(new Point(5,9));
		mapB.add(new Point(5,10));
		mapB.add(new Point(5,11));
		mapB.add(new Point(5,12));
		mapB.add(new Point(5,13));
		mapB.add(new Point(5,14));
		mapB.add(new Point(5,15));
		mapB.add(new Point(5,16));
		mapB.add(new Point(5,17));
		mapB.add(new Point(5,18));
		mapB.add(new Point(5,19));
		mapB.add(new Point(5,20));
		mapB.add(new Point(5,21));
		mapB.add(new Point(5,22));
		mapB.add(new Point(5,23));
		mapB.add(new Point(5,24));
		mapB.add(new Point(5,25));
		mapB.add(new Point(5,26));
		mapB.add(new Point(5,27));
		mapB.add(new Point(5,28));
		mapB.add(new Point(6,28));
		mapB.add(new Point(7,28));
		mapB.add(new Point(8,28));
		mapB.add(new Point(9,28));
		mapB.add(new Point(10,28));
		mapB.add(new Point(11,28));
		mapB.add(new Point(12,28));
		mapB.add(new Point(13,28));
		mapB.add(new Point(8,5));
		mapB.add(new Point(9,5));
		mapB.add(new Point(10,5));
		mapB.add(new Point(11,5));
		mapB.add(new Point(12,5));
		mapB.add(new Point(13,5));
		mapB.add(new Point(14,5));
		mapB.add(new Point(15,5));
		mapB.add(new Point(16,5));
		mapB.add(new Point(16,6));
		mapB.add(new Point(16,7));
		mapB.add(new Point(16,8));
		mapB.add(new Point(16,9));
		mapB.add(new Point(16,10));
		mapB.add(new Point(16,11));
		mapB.add(new Point(16,12));
		mapB.add(new Point(16,13));
		mapB.add(new Point(16,14));
		mapB.add(new Point(16,15));
		mapB.add(new Point(16,16));
		mapB.add(new Point(16,17));
		mapB.add(new Point(16,18));
		mapB.add(new Point(16,19));
		mapB.add(new Point(16,20));
		mapB.add(new Point(16,21));
		mapB.add(new Point(16,22));
		mapB.add(new Point(16,23));
		mapB.add(new Point(16,24));
		mapB.add(new Point(9,8));
		mapB.add(new Point(10,8));
		mapB.add(new Point(11,8));
		mapB.add(new Point(12,8));
		mapB.add(new Point(12,9));
		mapB.add(new Point(12,10));
		mapB.add(new Point(12,11));
		mapB.add(new Point(11,11));
		mapB.add(new Point(10,11));
		mapB.add(new Point(9,11));
		mapB.add(new Point(10,15));
		mapB.add(new Point(10,16));
		mapB.add(new Point(10,17));
		mapB.add(new Point(10,18));
		mapB.add(new Point(11,15));
		mapB.add(new Point(11,16));
		mapB.add(new Point(11,17));
		mapB.add(new Point(11,18));
		mapB.add(new Point(9,22));
		mapB.add(new Point(9,23));
		mapB.add(new Point(9,24));
		mapB.add(new Point(9,25));
		mapB.add(new Point(10,22));
		mapB.add(new Point(10,25));
		mapB.add(new Point(11,22));
		mapB.add(new Point(11,25));
		mapB.add(new Point(12,22));
		mapB.add(new Point(12,25));
		return mapB;
	}
	
	//【地图C】
	public ArrayList<Point> getMapC(){
		ArrayList<Point> mapC=new ArrayList<Point>();
		mapC.add(new Point(3,7));
		mapC.add(new Point(3,8));
		mapC.add(new Point(3,9));
		mapC.add(new Point(3,24));
		mapC.add(new Point(3,25));
		mapC.add(new Point(3,26));
		mapC.add(new Point(4,6));
		mapC.add(new Point(4,10));
		mapC.add(new Point(4,23));
		mapC.add(new Point(4,27));
		mapC.add(new Point(5,5));
		mapC.add(new Point(5,11));
		mapC.add(new Point(5,22));
		mapC.add(new Point(5,28));
		mapC.add(new Point(7,16));
		mapC.add(new Point(7,17));
		mapC.add(new Point(8,16));
		mapC.add(new Point(8,17));
		mapC.add(new Point(9,16));
		mapC.add(new Point(9,17));
		mapC.add(new Point(10,16));
		mapC.add(new Point(10,17));
		mapC.add(new Point(12,13));
		mapC.add(new Point(12,14));
		mapC.add(new Point(12,15));
		mapC.add(new Point(12,18));
		mapC.add(new Point(12,19));
		mapC.add(new Point(12,20));
		mapC.add(new Point(13,11));
		mapC.add(new Point(13,12));
		mapC.add(new Point(13,21));
		mapC.add(new Point(13,22));
		mapC.add(new Point(14,5));
		mapC.add(new Point(14,28));
		mapC.add(new Point(15,6));
		mapC.add(new Point(15,27));
		mapC.add(new Point(16,7));
		mapC.add(new Point(16,8));
		mapC.add(new Point(16,26));
		mapC.add(new Point(16,25));
		mapC.add(new Point(17,9));
		mapC.add(new Point(17,10));
		mapC.add(new Point(17,11));
		mapC.add(new Point(17,22));
		mapC.add(new Point(17,23));
		mapC.add(new Point(17,24));
		mapC.add(new Point(18,12));
		mapC.add(new Point(18,13));
		mapC.add(new Point(18,14));
		mapC.add(new Point(18,19));
		mapC.add(new Point(18,20));
		mapC.add(new Point(18,21));
		mapC.add(new Point(19,15));
		mapC.add(new Point(19,16));
		mapC.add(new Point(19,17));
		mapC.add(new Point(19,18));
		return mapC;
	}
}
